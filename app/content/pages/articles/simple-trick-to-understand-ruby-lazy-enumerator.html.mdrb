---
title: A simple trick to understand Ruby’s lazy enumerator
author: Ross Kaffenberger
layout: article
summary: Here is the summary
description: Here is the description that will show up in the the meta tag
published: '2024-12-25'
image: articles/simple-trick-to-understand-ruby-lazy-enumerator/placeholder.jpg
meta_image: articles/simple-trick-to-understand-ruby-lazy-enumerator/placeholder.jpg
tags:
  - Rails
---

Below is how I visualize how Ruby normally processes a chain of methods on an enumerable object.

<%= turbo_frame_tag [:ruby, :enumeration, :eager], data: { "controller" => "demo-ruby-enumeration", "demo-ruby-enumeration-url-value" => examples_ruby_enumeration_url(demo_type: "eager") } do %>

  <div><%= image_tag "articles/simple-trick-to-understand-ruby-lazy-enumerator/loading.gif" %></div>
<% end %>

Now visualize how enumeration changes when using `.lazy` enumeration.

<%= turbo_frame_tag [:ruby, :enumeration, :lazy], data: { "controller" => "demo-ruby-enumeration", "demo-ruby-enumeration-url-value" => examples_ruby_enumeration_url(demo_type: "lazy") } do %>

  <div><%= image_tag "articles/simple-trick-to-understand-ruby-lazy-enumerator/loading.gif" %></div>
<% end %>

Here’s the demo again with some controls to play with the speed and style of enumeration:

<%= turbo_frame_tag [:ruby, :enumeration, :combined], data: { "controller" => "demo-ruby-enumeration", "demo-ruby-enumeration-url-value" => examples_ruby_enumeration_url(demo_type: "combined") } do %>

  <div><%= image_tag "articles/simple-trick-to-understand-ruby-lazy-enumerator/loading.gif" %></div>
<% end %>
