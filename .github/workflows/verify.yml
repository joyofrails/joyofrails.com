# Put this in the file: .github/workflows/verify.yml

name: Verify
on: [push]

jobs:
  deploy-notice-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Notify Honeybadger
        run: RAILS_ENV=test bundle exec honeybadger deploy --environment test --revision ${{ github.sha }} --repository ${{ github.repository }} --user ${{ github.actor }} --api-key ${{ secrets.HONEYBADGER_API_KEY }}

  linters:
    name: Linters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: npm

      - name: Node version
        run: |
          node --version

      - name: Install packages
        run: |
          npm ci

      - name: Run Ruby linter
        run: |
          bin/standardrb --parallel

      - name: Run ERB linter
        run: |
          bin/erblint --lint-all

      - name: Run Bundler audit
        run: |
          bin/bundler-audit --update

      - name: Run security checks
        run: |
          bin/brakeman -q -w2

  tests:
    name: Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: npm

      - name: Setup geckodriver
        uses: browser-actions/setup-geckodriver@latest
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Node version
        run: |
          node --version

      - name: Install packages
        run: |
          npm ci

      - name: Setup test database
        env:
          RAILS_ENV: test
        run: |
          bin/rails db:setup

      - name: Run tests
        env:
          RAILS_ENV: test
        run: bin/rspec

  npm-test:
    name: Tests - JavaScript
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: npm

      - name: Node version
        run: |
          node --version

      - name: Install packages
        run: |
          npm ci

      - name: Run JavaScript unit tests
        run: |
          npm run test -- --watch=false

  assets:
    name: Assets
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: npm

      - name: Node version
        run: |
          node --version

      - name: Install packages
        run: |
          npm ci

      - name: Setup test database
        env:
          RAILS_ENV: test
        run: |
          bin/rails db:setup

      - name: Make sure assets compile
        run: |
          RAILS_MASTER_KEY=${{ secrets.RAILS_MASTER_KEY }} \
          SECRET_KEY_BASE_DUMMY=1 \
          RAILS_ENV=production \
          bin/rails assets:precompile
